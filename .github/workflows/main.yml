name: CDK Deploy and Destroy

on:
  push:
    branches:
      - main
      - '**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    if: github.ref == 'refs/heads/main' || (github.ref != 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip-ci]'))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set environment
        run: echo "ENVIRONMENT=prod" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/main'

      - name: Set environment for dev
        run: echo "ENVIRONMENT=dev" >> $GITHUB_ENV
        if: github.ref != 'refs/heads/main'

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Synthesize CDK
        run: cdk synth

      - name: Diff CDK Changes
        run: cdk diff
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Deploy CDK
        run: cdk deploy --require-approval never --verbose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

  destroy:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Destroy CDK Stack
        run: cdk destroy --force
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
